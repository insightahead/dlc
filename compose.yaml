
services:
  dlc-ui:
    image: ghcr.io/insightahead/dlc-ui:${DLC_RELEASE_TAG}
    ports:
      - "${DLC_UI_HOST_PORT}:80"

  dlc-data-generator:
    image: ghcr.io/insightahead/dlc-data-generator:${DLC_RELEASE_TAG}
    depends_on:
      db:
        condition: service_healthy
      dlc-data-loader:
        condition: service_started
    env_file:
      - ./dlc-env/.env
    ports:
      - "${DLC_DATA_GENERATOR_HOST_PORT}:80"
    volumes:
      - dlc-generated-data:/dlc-generated-data/
      - ./dlc-config:/dlc-data-generator/app/config/


  dlc-data-loader:
    image: ghcr.io/insightahead/dlc-data-loader:${DLC_RELEASE_TAG}
    # restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./dlc-env/.env
    ports:
      - "${DLC_DATA_LOADER_HOST_PORT}:80"
    volumes:
      - dlc-processed-data:/dlc-processed-data/
      - dlc-generated-data:/dlc-generated-data/

  db:
    container_name: dlc-db-container
    image: postgres:${POSTGRES_VERSION}
    command: ["postgres", "-c", "config_file=/etc/postgresql.conf"]
    env_file:
      - ./dlc-env/.env
    ports:
      - "${DLC_DB_HOST_PORT}:5503"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql.conf
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5503"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION}
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: 'False'
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${DLC_PGADMIN_HOST_PORT}:80"
    depends_on:
      - db
    volumes:
      - ./postgres/servers.json:/pgadmin4/servers.json
      - ./postgres/pgpass:/pgadmin4/pgpass

volumes:
  dlc-generated-data:
  dlc-processed-data:
  postgres_data:
  dlc-config:

#   liquibase:
#     image: liquibase/liquibase 
#     depends_on:
#       db:
#         condition: service_healthy
#     volumes:
#       - ./liquibase/changelog:/changelog # Liquibase changelog
#       - ./liquibase/liquibase.properties:/liquibase.properties  # Liquibase config
#     command: >
#       /bin/sh -c "
#         echo 'Waiting for database to be available...';
#         while ! nc -z db 5503; do
#           sleep 1;
#         done;
#         echo 'Database is up, running Liquibase...';
#         liquibase --changeLogFile=/changelog/master.xml update  # Adjust for your setup
#       "
#     env_file:
#       - ./dlc-env/.env

